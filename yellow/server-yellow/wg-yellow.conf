[Interface]
Address = 10.0.1.1/24
Address = fddd:dead:beef::101/120
ListenPort = 51821
PrivateKey = 
#SaveConfig = true

# IP Forwarding firewall rules for local/internal access
# More trust for 10.0.1.0/24, and fddd:dead:beef::100/120

# Allow connecting to VPN through LAN or over our other VPN (external port forwarding)
PostUp = ufw allow in on vpn to any port 51821 proto udp
PostUp = ufw allow in on wlp3s0 to any port 51821 proto udp

PreDown = ufw delete allow in on vpn to any port 51821 proto udp
PreDown = ufw delete allow in on wlp3s0 to any port 51821 proto udp

# Allow for trusted clients to talk to attached internal networks
PostUp = ufw route allow in on %i out on vpn
PostUp = ufw route allow in on %i out on wlp3s0

PreDown = ufw route delete allow in on %i out on vpn
PreDown = ufw route delete allow in on %i out on wlp3s0

# IP masquerading NAT rules
# Again, only trusted clients can NAT to networks other than our VPN
PostUp = iptables -t nat -A POSTROUTING -o wlp3s0 -j MASQUERADE -s 10.0.1.0/24
PostUp = iptables -t nat -A POSTROUTING -o vpn -j MASQUERADE
PostUp = ip6tables -t nat -A POSTROUTING -o wlp3s0 -j MASQUERADE -s fddd:dead:beef::100/120
PostUp = ip6tables -t nat -A POSTROUTING -o vpn -j MASQUERADE

PreDown = iptables -t nat -D POSTROUTING -o wlp3s0 -j MASQUERADE -s 10.0.1.0/24
PreDown = iptables -t nat -D POSTROUTING -o vpn -j MASQUERADE
PreDown = ip6tables -t nat -D POSTROUTING -o wlp3s0 -j MASQUERADE -s fddd:dead:beef::100/120
PreDown = ip6tables -t nat -D POSTROUTING -o vpn -j MASQUERADE


# Trusted Clients (10.0.1.0/24 and fddd:dead:beef::100/120)
## PC
[Peer]
PublicKey = 
PresharedKey = 
AllowedIPs = 10.0.1.2, fddd:dead:beef::2
